name: Build on Linux

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches-ignore:
      - main
  pull_request:
    branches-ignore:
      - main
      
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:      

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release
  BUILD_DIR: build

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Create Build Environment
      # Some projects don't allow in-source building, so create a separate build directory
      # We'll use this as our working directory for all subsequent commands
      run: |
        cmake -E make_directory llvm

    - name: Download LLVM
      working-directory: ${{github.workspace}}/llvm
      run: |
        wget -q https://github.com/fly-lang/llvm-project/releases/download/v11.1.0-linux-x86_64/llvm-11.1.0-x86_64-linux-gnu.tar.gz
        tar -zxvf *.tar.gz

    - name: Build
      # Some projects don't allow in-source building, so create a separate build directory
      # We'll use this as our working directory for all subsequent commands
      run: |
        cmake -E make_directory $BUILD_DIR
        pwd
        cmake . -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DLLVM_DIR=./llvm/lib/cmake
        cmake --build $BUILD_DIR

    - name: Test
      working-directory: ${{github.workspace}}/$BUILD_DIR
      # Execute tests defined by the CMake configuration.  
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C $BUILD_TYPE
